<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Tiles 관련 추가 내용--> 
	<!-- Tiles관련 설정파일 --> 
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> 
		<beans:property name="definitions"> 
			<beans:list> 
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value> 
			</beans:list> 
		</beans:property> 
	</beans:bean> 
	<!-- Tiles의 우선순위를 1로 해준다. --> 
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" /> 
		<beans:property name="order" value="1" /> 
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- 기존 view resolver의 우선순위를 2로 해준다. --> 
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
		<beans:property name="uploadTempDir" value="file:/C:/Project138/upload"></beans:property>
	</beans:bean>
	
	<!-- MappingJackson2JsonView는 모델에 저장된 모든 객체를 JSON형식으로 변환시켜주며 내부적으로는 Jackson 라이브러리의 
		 ObjectMapper를 이용해서 자바 객체를 JSON형식으로 변환한다. -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="text/plain;charset=UTF-8" />
	</beans:bean>
	
	<!-- NaverLoginBO Class에 대한 bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.spring.member.NaverLoginBO" />
	
	<!--  ChatRoom start -->
	<context:component-scan base-package="com.spring.chat" />
	<beans:bean id="socketHandler" class="com.spring.chat.SocketHandler"/>
	
	<websocket:handlers>
		<websocket:mapping path="/broadcasting.do" handler="socketHandler"/>
			<websocket:handshake-interceptors>
			<!-- WebSocket 에서 HttpSession 객체를 사용할때 -->
				<beans:bean class="com.spring.chat.HandshakeInterceptor"/>
			</websocket:handshake-interceptors>
	</websocket:handlers>
	<!--  ChatRoom end -->
	
	<context:component-scan base-package="com.spring.academy" />
	<context:component-scan base-package="com.spring.community" />
	<context:component-scan base-package="com.spring.main" />
	<context:component-scan base-package="com.spring.mypage" />
	<context:component-scan base-package="com.spring.member" />
	<context:component-scan base-package="com.spring.store" />
	<context:component-scan base-package="com.spring.estimate" />
	<context:component-scan base-package="com.spring.workshop" />
	<context:component-scan base-package="com.spring.chat" />
	<context:component-scan base-package="com.spring.note" />
	<context:component-scan base-package="com.spring.workshop" />
	<context:component-scan base-package="com.spring.admin" />
	<context:component-scan base-package="com.spring.order" />
	<context:component-scan base-package="com.spring.workshopMypage" />
</beans:beans>
