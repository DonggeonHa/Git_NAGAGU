<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mapper.EstimateMapper">

	<resultMap type="com.spring.estimate.EstimateVO" id="estimateMap">
		<result property="ESTIMATE_NUM" column="ESTIMATE_NUM"/>
		<result property="ESTIMATE_MEMBER" column="ESTIMATE_MEMBER"/> 
		<result property="ESTIMATE_NICK" column="ESTIMATE_NICK"/> 
		<result property="ESTIMATE_TITLE" column="ESTIMATE_TITLE"/> 
		<result property="ESTIMATE_DATE" column="ESTIMATE_DATE"/> 
		<result property="ESTIMATE_AREA" column="ESTIMATE_AREA"/> 
		<result property="ESTIMATE_CATEGORY" column="ESTIMATE_CATEGORY"/> 
		<result property="ESTIMATE_SOURCE" column="ESTIMATE_SOURCE"/> 
		<result property="ESTIMATE_COLOR" column="ESTIMATE_COLOR"/> 
		<result property="ESTIMATE_COAT" column="ESTIMATE_COAT"/> 
		<result property="ESTIMATE_SIZE" column="ESTIMATE_SIZE"/> 
		<result property="ESTIMATE_FILE" column="ESTIMATE_FILE"/> 
		<result property="ESTIMATE_CONTENT" column="ESTIMATE_CONTENT"/> 
		<result property="ESTIMATE_PAY" column="ESTIMATE_PAY"/> 
		<result property="ESTIMATE_STATE" column="ESTIMATE_STATE"/>
		<result property="ESTIMATE_MINPRICE" column="ESTIMATE_MINPRICE"/>
		<result property="ESTIMATE_OFFERCOUNT" column="ESTIMATE_OFFERCOUNT"/>
	</resultMap>
	
	<resultMap type="com.spring.estimate.EstimateOfferVO" id="offerMap">
        <result property="OFFER_NUM" column="OFFER_NUM"/>
        <result property="OFFER_ESTIMATE" column="OFFER_ESTIMATE"/>
        <result property="OFFER_WORKSHOP" column="OFFER_WORKSHOP"/>
        <result property="OFFER_DATE" column="OFFER_DATE"/>
        <result property="OFFER_CONTENT" column="OFFER_CONTENT"/>
        <result property="OFFER_PRICE" column="OFFER_PRICE"/>
        <result property="OFFER_STATE" column="OFFER_STATE"/>
    </resultMap>
	

	<!-- ///////////////// 견적글 관련 ///////////////// -->
	
	<insert id="estimateInsert" parameterType="com.spring.estimate.EstimateVO">
		insert into ESTIMATE values (estimate_seq.nextval, #{ESTIMATE_MEMBER}, #{ESTIMATE_NICK},#{ESTIMATE_TITLE},
		 sysdate, #{ESTIMATE_AREA}, #{ESTIMATE_CATEGORY}, #{ESTIMATE_SOURCE}, #{ESTIMATE_COLOR}, #{ESTIMATE_COAT}, #{ESTIMATE_SIZE}, 
		#{ESTIMATE_FILE}, #{ESTIMATE_CONTENT}, #{ESTIMATE_PAY}, 0, 0, 0)
	</insert>
	
	<update id="estimateUpdate" parameterType="com.spring.estimate.EstimateVO">
		update ESTIMATE set ESTIMATE_TITLE = #{ESTIMATE_TITLE}, ESTIMATE_AREA = #{ESTIMATE_AREA}, ESTIMATE_CATEGORY = #{ESTIMATE_CATEGORY}, 
		ESTIMATE_SOURCE = #{ESTIMATE_SOURCE}, ESTIMATE_COLOR = #{ESTIMATE_COLOR}, ESTIMATE_COAT = #{ESTIMATE_COAT}, 
		ESTIMATE_SIZE = #{ESTIMATE_SIZE}, ESTIMATE_FILE = #{ESTIMATE_FILE}, ESTIMATE_CONTENT = #{ESTIMATE_CONTENT},
		ESTIMATE_PAY = #{ESTIMATE_PAY} where ESTIMATE_NUM = #{ESTIMATE_NUM}
	</update>
	
	<delete id="estimateDelete" parameterType="int">
		delete from ESTIMATE where ESTIMATE_NUM = #{ESTIMATE_NUM}
	</delete>
	
	<select id="estimateList" parameterType="java.util.HashMap" resultMap="estimateMap">
		select * from (select ROW_NUMBER() OVER (order by ESTIMATE_DATE desc) as RNUM, ESTIMATE_NUM, ESTIMATE_MEMBER, ESTIMATE_NICK, ESTIMATE_TITLE, 
		ESTIMATE_DATE, ESTIMATE_CATEGORY, ESTIMATE_PAY, ESTIMATE_STATE, ESTIMATE_MINPRICE, ESTIMATE_OFFERCOUNT from ESTIMATE)
		<![CDATA[where RNUM >= #{startRow} and RNUM <= #{endRow}]]>
		<if test="ES_CATEGORY == 'title'"> and ESTIMATE_TITLE like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'content'"> and ESTIMATE_CONTENT like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'nick'"> and ESTIMATE_NICK like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'TandC'"> and (ESTIMATE_TITLE like '%'||#{ES_SEARCH}||'%'
		or ESTIMATE_CONTENT like '%'||#{ES_SEARCH}||'%')</if>
	</select>
	
	<select id="estimateCount" parameterType="java.util.HashMap" resultType="int">
		select count(*) from ESTIMATE
		<if test="ES_CATEGORY == 'title'"> where ESTIMATE_TITLE like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'content'"> where ESTIMATE_CONTENT like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'nick'"> where ESTIMATE_NICK like '%'||#{ES_SEARCH}||'%'</if>
		<if test="ES_CATEGORY == 'TandC'"> where ESTIMATE_TITLE like '%'||#{ES_SEARCH}||'%'
		or ESTIMATE_CONTENT like '%'||#{ES_SEARCH}||'%'</if>
	</select>
	
	<select id="estimateDetail" parameterType="int" resultMap="estimateMap">
		select * from ESTIMATE where ESTIMATE_NUM=#{ESTIMATE_NUM}
	</select>
	
	<update id="estimateBidSet" parameterType="com.spring.estimate.EstimateVO">
		update ESTIMATE set ESTIMATE_STATE = #{ESTIMATE_STATE} where ESTIMATE_NUM = #{ESTIMATE_NUM}
	</update>
	
	
	<!-- ///////////////// 견적 제안 댓글 관련 ///////////////// -->
	
	
	<select id="offerList" parameterType="java.util.HashMap" resultMap="offerMap">
        select * from (select ROW_NUMBER() OVER (ORDER BY OFFER_STATE desc, OFFER_PRICE asc, OFFER_DATE desc) AS RNUM, OFFER_NUM, OFFER_ESTIMATE, OFFER_WORKSHOP, OFFER_DATE, 
        OFFER_CONTENT, OFFER_PRICE, OFFER_STATE from ESTIMATE_OFFER)
        <![CDATA[where RNUM >= #{startRow} and RNUM <= #{endRow} and OFFER_ESTIMATE = #{ESTIMATE_NUM}]]>
        <if test="OFFER_WORKSHOP != null"> and OFFER_WORKSHOP = #{OFFER_WORKSHOP}</if>
    </select>
    
    <select id="offerCount" parameterType="java.util.HashMap" resultType="int">
        select count(*) from ESTIMATE_OFFER where OFFER_ESTIMATE = #{ESTIMATE_NUM}
        <if test="OFFER_WORKSHOP != null"> and OFFER_WORKSHOP = #{OFFER_WORKSHOP}</if>
    </select>
    
    <select id="offerDetail" parameterType="int" resultType="com.spring.estimate.EstimateOfferVO">
    	select * from ESTIMATE_OFFER where OFFER_NUM = #{OFFER_NUM}
    </select>
    
    <insert id="offerInsert" parameterType="com.spring.estimate.EstimateOfferVO">
        insert into ESTIMATE_OFFER values (estimate_offer_seq.nextval, #{OFFER_ESTIMATE}, #{OFFER_WORKSHOP}, 
        sysdate, #{OFFER_CONTENT}, #{OFFER_PRICE}, 0)
    </insert>
    
    <update id="offerModify" parameterType="com.spring.estimate.EstimateOfferVO">
    	update ESTIMATE_OFFER set OFFER_PRICE = #{OFFER_PRICE}, OFFER_CONTENT=#{OFFER_PRICE} where OFFER_NUM = #{OFFER_NUM}
    </update>
	
	<delete id="offerDelete" parameterType="int">
		delete from ESTIMATE_OFFER where OFFER_NUM = #{OFFER_NUM}
	</delete>
	
	<delete id="offerDeleteAll" parameterType="int">
		delete from ESTIMATE_OFFER where OFFER_ESTIMATE = #{ESTIMATE_NUM}
	</delete>
	
	<update id="offerBidSet" parameterType="com.spring.estimate.EstimateOfferVO">
		update ESTIMATE_OFFER set OFFER_STATE = #{OFFER_STATE} where OFFER_NUM = #{OFFER_NUM}
	</update>
	
	<update id="offerSetInfo" parameterType="com.spring.estimate.EstimateVO">
		update ESTIMATE set ESTIMATE_MINPRICE = #{ESTIMATE_MINPRICE}
		<if test="ESTIMATE_OFFERCOUNT != null">, ESTIMATE_OFFERCOUNT = #{ESTIMATE_OFFERCOUNT}</if> 
		where ESTIMATE_NUM = #{ESTIMATE_NUM}
	</update>
	
	<select id="estimateMinPrice" parameterType="int" resultType="int">
		select min(OFFER_PRICE) from estimate_offer where OFFER_ESTIMATE = #{ESTIMATE_NUM}
	</select>
	
	
	<!-- ///////////////// 견적 주문 관리 관련 ///////////////// -->
	
	
	<select id="esOrderList" parameterType="String" resultType="com.spring.estimate.EstimateOrderVO">
		select * from ESTIMATE_ORDER where ES_ORDER_BUYER = #{ES_ORDER_BUYER}
	</select>
	
	<insert id="esOrderInsert" parameterType="com.spring.estimate.EstimateOrderVO">
		insert into ESTIMATE_ORDER (ES_ORDER_NUM, ES_ORDER_ESTIMATE, ES_ORDER_TITLE, ES_ORDER_BUYER, 
		ES_ORDER_WORKSHOP, ES_ORDER_PIC, ES_ORDER_PRICE, ES_ORDER_STATE)
		values (ESTIMATE_ORDER_SEQ.nextval, #{ES_ORDER_ESTIMATE}, #{ES_ORDER_TITLE}, #{ES_ORDER_BUYER}, 
		#{ES_ORDER_WORKSHOP}, #{ES_ORDER_PIC}, #{ES_ORDER_PRICE}, 0)
	</insert>
	
	<delete id="esOrderDelete" parameterType="int">
		delete from ESTIMATE_ORDER where ES_ORDER_NUM = #{ES_ORDER_NUM}
	</delete>
    
</mapper>