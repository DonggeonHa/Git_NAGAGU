<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 xml문서와 맵핑할 인터페이스 경로, 이름 -->
<mapper namespace="com.spring.mapper.ClassQnaMapper">
	<resultMap type="java.util.HashMap" id="hashmapVO">
		<result property="QNA_NUM" column="QNA_NUM" />	
		<result property="QNA_MEMBER" column="QNA_MEMBER" />	
		<result property="QNA_CLASS" column="QNA_CLASS" />	
		<result property="QNA_DATE" column="QNA_DATE" />		
		<result property="QNA_CONTENT" column="QNA_CONTENT" />
		<result property="QNA_RE" column="QNA_RE" />
		<result property="QNA_STATUS" column="QNA_STATUS" />
	</resultMap>

	<resultMap type="java.util.HashMap" id="classQnaResultMap">
		<result property="QNA_NUM" column="QNA_NUM" />	
		<result property="QNA_MEMBER" column="QNA_MEMBER" />	
		<result property="QNA_CLASS" column="QNA_CLASS" />	
		<result property="QNA_DATE" column="QNA_DATE" />		
		<result property="QNA_CONTENT" column="QNA_CONTENT" />	
		<result property="QNA_RE" column="QNA_RE" />
		<result property="QNA_STATUS" column="QNA_STATUS" />
		<result property="MEMBER_NICK" column="MEMBER_NICK" />		
		<result property="MEMBER_PICTURE" column="MEMBER_PICTURE" />		
		<result property="MEMBER_NUM" column="MEMBER_NUM" />		
		<result property="WORKSHOP_NUM" column="WORKSHOP_NUM" />		
		<result property="WORKSHOP_NAME" column="WORKSHOP_NAME" />		
		<result property="WORKSHOP_PICTURE" column="WORKSHOP_PICTURE" />		
	</resultMap>

	<resultMap type="com.spring.academy.Class_qnaVO" id="classVOQnaResultMap">
		<result property="QNA_NUM" column="QNA_NUM" />	
		<result property="QNA_MEMBER" column="QNA_MEMBER" />	
		<result property="QNA_CLASS" column="QNA_CLASS" />	
		<result property="QNA_DATE" column="QNA_DATE" />	
		<result property="QNA_CONTENT" column="QNA_CONTENT" />
		<result property="QNA_RE" column="QNA_RE" />		
		<result property="QNA_STATUS" column="QNA_STATUS" />
		<result property="MEMBER_NICK" column="MEMBER_NICK" />		
		<result property="MEMBER_PICTURE" column="MEMBER_PICTURE" />		
	</resultMap>

	
	<resultMap id="classQnaInfoResultMap" type="java.util.HashMap">
		<result column="QNA_NUM" property="QNA_NUM" javaType="java.lang.Integer"/>
		<result column="QNA_MEMBER" property="QNA_MEMBER"/>
		<result column="QNA_CLASS" property="QNA_CLASS"/>
		<result column="QNA_DATE" property="QNA_DATE"/>
		<result column="QNA_CONTENT" property="QNA_CONTENT"/>
		<result column="QNA_RE" property="QNA_RE"/>
		<result column="QNA_STATUS" property="QNA_STATUS" javaType="java.lang.Integer"/>
		<result column="MEMBER_NICK" property="MEMBER_NICK"/>
		<result column="MEMBER_PICTURE" property="MEMBER_PICTURE"/>
		<result column="CLASS_NAME" property="CLASS_NAME"/>
		<result column="CLASS_NUMBER" property="CLASS_NUMBER" javaType="java.lang.Integer"/>
		<result column="CLASS_CATEGORY" property="CLASS_CATEGORY"/>
	</resultMap>
		
	<!-- 원글이 존재하는지 확인하기 위한 -->
	<select id="getQnaCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(*) FROM CLASS_QNA WHERE QNA_CLASS=#{CLASS_NUMBER} AND QNA_RE = 0
	</select>
	
	<select id="getQna_RE_Count" parameterType="java.util.HashMap" resultType="int">
		SELECT count(*) FROM CLASS_QNA WHERE QNA_CLASS=#{CLASS_NUMBER} AND QNA_RE != 0
	</select>
	
	<select id="getQnaList" parameterType="java.util.HashMap" resultMap="classQnaResultMap">
		SELECT * FROM
			(SELECT rownum rnum, QNA_NUM, QNA_MEMBER, QNA_CLASS, QNA_DATE, QNA_CONTENT, QNA_RE, QNA_STATUS, 
			MEMBER_NICK, MEMBER_PICTURE, MEMBER_NUM FROM 
				(SELECT Q.*, N.MEMBER_NICK, N.MEMBER_PICTURE, N.MEMBER_NUM FROM CLASS_QNA Q, NAGAGU_MEMBER N
				WHERE Q.QNA_CLASS=#{CLASS_NUMBER} AND Q.QNA_MEMBER=N.MEMBER_NUM AND Q.QNA_RE=0 ORDER BY Q.QNA_DATE DESC))
	</select>

	<select id="getQna_RE_List" parameterType="java.util.HashMap" resultMap="classQnaResultMap">
		SELECT * FROM
			(SELECT rownum rnum, QNA_NUM, QNA_MEMBER, QNA_CLASS, QNA_DATE, QNA_CONTENT, QNA_RE, QNA_STATUS, 
			WORKSHOP_NAME, WORKSHOP_PICTURE, WORKSHOP_NUM FROM 
				(SELECT Q.*, N.WORKSHOP_NAME, N.WORKSHOP_PICTURE, N.WORKSHOP_NUM FROM CLASS_QNA Q, NAGAGU_WORKSHOP_MEMBER N
				WHERE Q.QNA_CLASS=#{CLASS_NUMBER} AND Q.QNA_MEMBER=N.WORKSHOP_NUM AND Q.QNA_RE!=0 ORDER BY Q.QNA_DATE DESC))
	</select>
	
	
	<insert id="insertQna" parameterType="com.spring.academy.Class_qnaVO">
		<selectKey keyProperty="QNA_NUM" resultType="int" order="AFTER">
				SELECT class_qna_seq.currval FROM dual
			</selectKey>
		INSERT INTO CLASS_QNA VALUES
		(class_qna_seq.nextval, #{QNA_MEMBER}, #{QNA_CLASS}, #{QNA_DATE}, #{QNA_CONTENT}, #{QNA_RE}, #{QNA_STATUS})
			
	</insert>	
	 
	 <update id="PlusQnaStatus" parameterType="com.spring.academy.Class_qnaVO">
		UPDATE CLASS_QNA SET 
			QNA_STATUS=1
		WHERE QNA_NUM =#{QNA_RE} 
	</update>
	 
	 
	<select id="getQnaVO" parameterType="com.spring.academy.Class_qnaVO" resultMap="classVOQnaResultMap">
		SELECT * FROM CLASS_QNA WHERE QNA_NUM=#{QNA_NUM} 
	</select>	 
	
	<select id="getQnaInfo" parameterType="com.spring.academy.Class_qnaVO" resultMap="classQnaInfoResultMap">
		SELECT Q.QNA_NUM, Q.QNA_MEMBER, Q.QNA_CLASS, Q.QNA_DATE, Q.QNA_CONTENT, Q.QNA_RE, Q.QNA_STATUS,
		M.MEMBER_NICK, M.MEMBER_PICTURE , A.CLASS_NAME, A.CLASS_NUMBER, A.CLASS_CATEGORY, A.CLASS_DIVISION  
			FROM CLASS_QNA Q, NAGAGU_MEMBER M , ACADEMY A 
		WHERE Q.QNA_MEMBER = M.MEMBER_NUM 
		AND A.CLASS_NUMBER = Q.QNA_CLASS
        AND Q.QNA_MEMBER = M.MEMBER_NUM
		AND Q.QNA_NUM=#{QNA_NUM} 
	</select>	 
	
	<select id="getQnaReplyInfo" parameterType="com.spring.academy.Class_qnaVO" resultMap="classVOQnaResultMap">
		SELECT * FROM CLASS_QNA WHERE QNA_RE=#{QNA_NUM}  
	</select>	 	 
	
	<update id="modifyQna" parameterType="com.spring.academy.Class_qnaVO">
		UPDATE CLASS_QNA SET 
			QNA_DATE=#{QNA_DATE}, QNA_CONTENT=#{QNA_CONTENT}
		WHERE QNA_NUM =#{QNA_NUM} 
	</update>
	
	<select id="findChildrenRE" parameterType="com.spring.academy.Class_qnaVO" resultType="int">
		SELECT count(*) FROM CLASS_QNA WHERE QNA_RE=#{QNA_NUM} 
	</select>	
	
	<delete id="deleteQna" parameterType="com.spring.academy.Class_qnaVO">
		DELETE FROM CLASS_QNA WHERE QNA_NUM=#{QNA_NUM}
	</delete>		
	
	<select id="getqnaReCount" parameterType="com.spring.academy.Class_qnaVO" resultType="int">
		SELECT COUNT(QNA_RE)
		FROM CLASS_QNA
		WHERE QNA_RE= #{QNA_RE} 
	</select>
	

	
	<update id="MinusQnaStatus" parameterType="com.spring.academy.Class_qnaVO">
		UPDATE CLASS_QNA SET 
			QNA_STATUS=0
		WHERE QNA_NUM =#{QNA_RE} 

	</update>
	 
</mapper>